name: build
run-name: ${{ github.actor }} 
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Create date of build file
      run: date > pkg/embedded/resources/build-date.txt

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - name: build and unit test
      run: make all
    
    - name: Upload Go test results
      uses: actions/upload-artifact@v3
      with:
        name: Coverage html
        path: build/coverage.html

    - name: Upload built binary for arm64
      uses: actions/upload-artifact@v3
      with:
        name: Built executables
        path: bin/

  containerise:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v2
      with:
        name: Built executables
    
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ghcr.io/galasa-dev/githubapp-copyright

    - name: Build and push Docker image
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  deploy:
    needs: containerise
    runs-on: ubuntu-latest
    # Only on main branch builds
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:

    - uses: clowdhaus/argo-cd-action/@main
      with:
        version: 2.6.7
        command: app
        options: actions run github-copyright restart --kind Deployment --resource-name githubappcopyright --auth-token ${{ secrets.ARGOCD_CLI_TOKEN }} --server argocd.galasa.dev --grpc-web
      

    - uses: clowdhaus/argo-cd-action/@main
      with:
        version: 2.6.7
        command: app
        options: wait github-copyright --resource apps:Deployment:githubappcopyright --health --auth-token ${{ secrets.ARGOCD_CLI_TOKEN }} --server argocd.galasa.dev --grpc-web


      
  